# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  phpunit:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.1-node-browsers
      - image: circleci/mysql:5.7-ram
        environment:
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'

    steps:
      - run: sudo apt-get install -y libpng-dev
      # Install php extensions that laravel required
      - run: sudo docker-php-ext-install mbstring
      - run: sudo docker-php-ext-install gd
      - run: sudo docker-php-ext-install tokenizer
      - run: sudo docker-php-ext-install pdo
      - run: sudo docker-php-ext-install json
      - run: sudo docker-php-ext-install bcmath
      - run: sudo docker-php-ext-install ctype
      - run: sudo docker-php-ext-install xml

      - checkout

      - run: mv .env.circleci .env

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: composer install -n --prefer-dist
      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor


      # prepare the database
      - run: php artisan db:create
      - run: php artisan migrate

      # run tests with phpunit or codecept
      - run: ./vendor/bin/phpunit --exclude-group ignore

workflows:
  version: 2
  pr-build:
    jobs:
      - phpunit
